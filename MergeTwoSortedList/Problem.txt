Problem : 

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

----------------------------------------------------------------------------------------------------------------------------------------------

Pseudocode 1 : (Iteration)

1] Get the two sorted linked list 
2] Check 1st element in 1st linked list with 1st element in 2nd linked list.
3] If 1st element in 1st linked list is equal or less than the 2nd linked list
4] Remove the element in the 2nd linked list and add the element in the middle of the 1st linked list
5] Continue the process untill all element in the 2nd linked list are empty and added to the 1st linked list.
6] If 2nd linked list empty, return the 1st linked list and print all the elements.

---------------------------------------------------------------------------------------------------------------

Pseudocode 2 : (Recursion)

Edge cases : 
1] Both the lists are empty
2] If one of the list is empty, return the other list.
3] Determine which list has the smaller head, we recursively set the next value to that to get the next merge result. 

